const Customer = require("../models/Customer-admin.js");

// üìå L·∫•y danh s√°ch kh√°ch h√†ng
const getCustomers = async (req, res) => {
    try {
        const customers = await Customer.find();
        console.log("üìå Customers:", customers);
        res.status(200).json(customers);
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y danh s√°ch kh√°ch h√†ng:", error);
        res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch kh√°ch h√†ng", error });
    }
};

// üìå Th√™m kh√°ch h√†ng m·ªõi
const addCustomer = async (req, res) => {
    try {
        const { customer_id, customer_name, customer_email, customer_phone } = req.body;

        // Ki·ªÉm tra tr√πng ID ho·∫∑c email
        const existingCustomer = await Customer.findOne({ $or: [{ customer_id }, { customer_email }] });
        if (existingCustomer) {
            return res.status(400).json({ message: "Kh√°ch h√†ng ƒë√£ t·ªìn t·∫°i" });
        }

        const newCustomer = new Customer({ customer_id, customer_name, customer_email, customer_phone });
        await newCustomer.save();
        res.status(201).json({ message: "Th√™m kh√°ch h√†ng th√†nh c√¥ng", newCustomer });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi th√™m kh√°ch h√†ng", error });
    }
};

// üìå C·∫≠p nh·∫≠t kh√°ch h√†ng
const updateCustomer = async (req, res) => {
    try {
        const updatedCustomer = await Customer.findByIdAndUpdate(req.params.id, req.body, { new: true });
        if (!updatedCustomer) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng" });

        res.status(200).json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng", updatedCustomer });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t kh√°ch h√†ng", error });
    }
};

// üìå X√≥a kh√°ch h√†ng
const deleteCustomer = async (req, res) => {
    try {
        const deletedCustomer = await Customer.findByIdAndDelete(req.params.id);
        if (!deletedCustomer) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng" });

        res.status(200).json({ message: "X√≥a kh√°ch h√†ng th√†nh c√¥ng" });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi x√≥a kh√°ch h√†ng", error });
    }
};

module.exports = { getCustomers, addCustomer, updateCustomer, deleteCustomer };